###################################################################
##
## Name     : nf10_pcap_replay_uengine
## Desc     : Microprocessor Peripheral Description
##
###################################################################

BEGIN nf10_pcap_replay_uengine

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION STYLE = MIX
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = TRUE
OPTION IP_GROUP = OSNT
OPTION DESC = Pcap Replay uEngine
OPTION LONG_DESC = Pcap Replay uEngine

## IO Interfaces
IO_INTERFACE IO_IF = QDR_0
IO_INTERFACE IO_IF = QDR_1
IO_INTERFACE IO_IF = QDR_2

## Bus Interfaces
BUS_INTERFACE BUS = M_AXIS, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = S_AXIS, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_DATA_WIDTH = 32, BUS = S_AXI
PARAMETER C_S_AXI_ADDR_WIDTH = 32, BUS = S_AXI
PARAMETER C_BASEADDR = 0xffffffff, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_S_AXI_ACLK_FREQ_HZ = 100000000, BUS = S_AXI
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI
PARAMETER C_USE_WSTRB = 0, DT = INTEGER, RANGE = (0:1), BUS = S_AXI
PARAMETER C_DPHASE_TIMEOUT = 8, DT = INTEGER, RANGE = (0:512), BUS = S_AXI
PARAMETER C_M_AXIS_DATA_WIDTH = 256, BUS = M_AXIS
PARAMETER C_M_AXIS_TUSER_WIDTH = 128, BUS = M_AXIS
PARAMETER C_S_AXIS_DATA_WIDTH = 256, BUS = S_AXIS
PARAMETER C_S_AXIS_TUSER_WIDTH = 128, BUS = S_AXIS
PARAMETER QDR_NUM_CHIPS = 2, DT = INTEGER, RANGE = (0:3)
PARAMETER QDR_DATA_WIDTH = 36, ASSIGNMENT = CONSTANT
PARAMETER QDR_ADDR_WIDTH = 19, ASSIGNMENT = CONSTANT
PARAMETER QDR_BW_WIDTH = 4, ASSIGNMENT = CONSTANT
PARAMETER QDR_CQ_WIDTH = 1, ASSIGNMENT = CONSTANT
PARAMETER QDR_CLK_WIDTH = 1, ASSIGNMENT = CONSTANT
PARAMETER QDR_BURST_LENGTH = 4, DT = INTEGER, VALUES = (2=2, 4=4) 

## Ports
PORT axi_aclk = "", DIR = I, SIGIS = CLK, BUS = M_AXIS:S_AXIS:S_AXI
PORT axi_aresetn = "", DIR = I, SIGIS = RST

PORT dcm_locked = "", DIR = I

PORT s_axi_awaddr = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_awvalid = AWVALID, DIR = I, BUS = S_AXI
PORT s_axi_wdata = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_wstrb = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_wvalid = WVALID, DIR = I, BUS = S_AXI
PORT s_axi_bready = BREADY, DIR = I, BUS = S_AXI
PORT s_axi_araddr = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_arvalid = ARVALID, DIR = I, BUS = S_AXI
PORT s_axi_rready = RREADY, DIR = I, BUS = S_AXI
PORT s_axi_arready = ARREADY, DIR = O, BUS = S_AXI
PORT s_axi_rdata = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT s_axi_rresp = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT s_axi_rvalid = RVALID, DIR = O, BUS = S_AXI
PORT s_axi_wready = WREADY, DIR = O, BUS = S_AXI
PORT s_axi_bresp = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT s_axi_bvalid = BVALID, DIR = O, BUS = S_AXI
PORT s_axi_awready = AWREADY, DIR = O, BUS = S_AXI

PORT m_axis_tdata = TDATA, DIR = O, VEC = [C_M_AXIS_DATA_WIDTH-1:0], BUS = M_AXIS, ENDIAN = LITTLE
PORT m_axis_tstrb = TSTRB, DIR = O, VEC = [(C_M_AXIS_DATA_WIDTH/8)-1:0], BUS = M_AXIS, ENDIAN = LITTLE
PORT m_axis_tuser = TUSER, DIR = O, VEC = [C_M_AXIS_TUSER_WIDTH-1:0], BUS = M_AXIS, ENDIAN = LITTLE
PORT m_axis_tvalid = TVALID, DIR = O, BUS = M_AXIS
PORT m_axis_tready = TREADY, DIR = I, BUS = M_AXIS
PORT m_axis_tlast = TLAST, DIR = O, BUS = M_AXIS

PORT s_axis_tdata = TDATA, DIR = I, VEC = [C_S_AXIS_DATA_WIDTH-1:0], BUS = S_AXIS, ENDIAN = LITTLE
PORT s_axis_tstrb = TSTRB, DIR = I, VEC = [(C_S_AXIS_DATA_WIDTH/8)-1:0], BUS = S_AXIS, ENDIAN = LITTLE
PORT s_axis_tuser = TUSER, DIR = I, VEC = [C_S_AXIS_TUSER_WIDTH-1:0], BUS = S_AXIS, ENDIAN = LITTLE
PORT s_axis_tvalid = TVALID, DIR = I, BUS = S_AXIS
PORT s_axis_tready = TREADY, DIR = O, BUS = S_AXIS
PORT s_axis_tlast = TLAST, DIR = I, BUS = S_AXIS

PORT qdr_clk = "", DIR = I, SIGIS = CLK
PORT qdr_clk_200 = "", DIR = I, SIGIS = CLK
PORT qdr_clk_270 = "", DIR = I, SIGIS = CLK

PORT qdr_d_0 = "", DIR = O, IO_IF = QDR_0, VEC = [QDR_DATA_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_q_0 = "", DIR = I, IO_IF = QDR_0, VEC = [QDR_DATA_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_sa_0 = "", DIR = O, IO_IF = QDR_0, VEC = [QDR_ADDR_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_w_n_0 = "", DIR = O, IO_IF = QDR_0, ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_r_n_0 = "", DIR = O, IO_IF = QDR_0, ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_bw_n_0 = "", DIR = O, IO_IF = QDR_0, VEC = [QDR_BW_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_dll_off_n_0 = "", DIR = O, IO_IF = QDR_0, ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_cq_0 = "", DIR = I, IO_IF = QDR_0, VEC = [QDR_CQ_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_cq_n_0 = "", DIR = I, IO_IF = QDR_0, VEC = [QDR_CQ_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_c_n_0 = "", DIR = O, IO_IF = QDR_0, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_k_n_0 = "", DIR = O, IO_IF = QDR_0, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_c_0 = "", DIR = O, IO_IF = QDR_0, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_k_0 = "", DIR = O, IO_IF = QDR_0, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 0)
PORT qdr_masterbank_sel_0 = "", DIR = I, IO_IF = QDR_0, ISVALID = (QDR_NUM_CHIPS > 0)

PORT qdr_d_1 = "", DIR = O, IO_IF = QDR_1, VEC = [QDR_DATA_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_q_1 = "", DIR = I, IO_IF = QDR_1, VEC = [QDR_DATA_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_sa_1 = "", DIR = O, IO_IF = QDR_1, VEC = [QDR_ADDR_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_w_n_1 = "", DIR = O, IO_IF = QDR_1, ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_r_n_1 = "", DIR = O, IO_IF = QDR_1, ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_bw_n_1 = "", DIR = O, IO_IF = QDR_1, VEC = [QDR_BW_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_dll_off_n_1 = "", DIR = O, IO_IF = QDR_1, ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_cq_1 = "", DIR = I, IO_IF = QDR_1, VEC = [QDR_CQ_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_cq_n_1 = "", DIR = I, IO_IF = QDR_1, VEC = [QDR_CQ_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_c_n_1 = "", DIR = O, IO_IF = QDR_1, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_k_n_1 = "", DIR = O, IO_IF = QDR_1, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_c_1 = "", DIR = O, IO_IF = QDR_1, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_k_1 = "", DIR = O, IO_IF = QDR_1, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 1)
PORT qdr_masterbank_sel_1 = "", DIR = I, IO_IF = QDR_1, ISVALID = (QDR_NUM_CHIPS > 1)

PORT qdr_d_2 = "", DIR = O, IO_IF = QDR_2, VEC = [QDR_DATA_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_q_2 = "", DIR = I, IO_IF = QDR_2, VEC = [QDR_DATA_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_sa_2 = "", DIR = O, IO_IF = QDR_2, VEC = [QDR_ADDR_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_w_n_2 = "", DIR = O, IO_IF = QDR_2, ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_r_n_2 = "", DIR = O, IO_IF = QDR_2, ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_bw_n_2 = "", DIR = O, IO_IF = QDR_2, VEC = [QDR_BW_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_dll_off_n_2 = "", DIR = O, IO_IF = QDR_2, ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_cq_2 = "", DIR = I, IO_IF = QDR_2, VEC = [QDR_CQ_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_cq_n_2 = "", DIR = I, IO_IF = QDR_2, VEC = [QDR_CQ_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_c_n_2 = "", DIR = O, IO_IF = QDR_2, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_k_n_2 = "", DIR = O, IO_IF = QDR_2, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_c_2 = "", DIR = O, IO_IF = QDR_2, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_k_2 = "", DIR = O, IO_IF = QDR_2, VEC = [QDR_CLK_WIDTH-1:0], ISVALID = (QDR_NUM_CHIPS > 2)
PORT qdr_masterbank_sel_2 = "", DIR = I, IO_IF = QDR_2, ISVALID = (QDR_NUM_CHIPS > 2)

END
